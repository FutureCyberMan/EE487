
simple_interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000048  00800100  00000c40  00000cd4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c40  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000027  00800148  00800148  00000d1c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d1c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000db8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009be  00000000  00000000  00000e48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000083c  00000000  00000000  00001806  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a6e  00000000  00000000  00002042  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000011c  00000000  00000000  00002ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00007ad9  00000000  00000000  00002bcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000221  00000000  00000000  0000a6a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  0000a8c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002ce0  00000000  00000000  0000a926  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	a3 c0       	rjmp	.+326    	; 0x14c <__vector_1>
   6:	00 00       	nop
   8:	b8 c0       	rjmp	.+368    	; 0x17a <__vector_2>
   a:	00 00       	nop
   c:	48 c0       	rjmp	.+144    	; 0x9e <__bad_interrupt>
   e:	00 00       	nop
  10:	46 c0       	rjmp	.+140    	; 0x9e <__bad_interrupt>
  12:	00 00       	nop
  14:	44 c0       	rjmp	.+136    	; 0x9e <__bad_interrupt>
  16:	00 00       	nop
  18:	42 c0       	rjmp	.+132    	; 0x9e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	40 c0       	rjmp	.+128    	; 0x9e <__bad_interrupt>
  1e:	00 00       	nop
  20:	3e c0       	rjmp	.+124    	; 0x9e <__bad_interrupt>
  22:	00 00       	nop
  24:	3c c0       	rjmp	.+120    	; 0x9e <__bad_interrupt>
  26:	00 00       	nop
  28:	3a c0       	rjmp	.+116    	; 0x9e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	38 c0       	rjmp	.+112    	; 0x9e <__bad_interrupt>
  2e:	00 00       	nop
  30:	36 c0       	rjmp	.+108    	; 0x9e <__bad_interrupt>
  32:	00 00       	nop
  34:	34 c0       	rjmp	.+104    	; 0x9e <__bad_interrupt>
  36:	00 00       	nop
  38:	32 c0       	rjmp	.+100    	; 0x9e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	30 c0       	rjmp	.+96     	; 0x9e <__bad_interrupt>
  3e:	00 00       	nop
  40:	2e c0       	rjmp	.+92     	; 0x9e <__bad_interrupt>
  42:	00 00       	nop
  44:	2c c0       	rjmp	.+88     	; 0x9e <__bad_interrupt>
  46:	00 00       	nop
  48:	2a c0       	rjmp	.+84     	; 0x9e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	28 c0       	rjmp	.+80     	; 0x9e <__bad_interrupt>
  4e:	00 00       	nop
  50:	26 c0       	rjmp	.+76     	; 0x9e <__bad_interrupt>
  52:	00 00       	nop
  54:	24 c0       	rjmp	.+72     	; 0x9e <__bad_interrupt>
  56:	00 00       	nop
  58:	22 c0       	rjmp	.+68     	; 0x9e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	20 c0       	rjmp	.+64     	; 0x9e <__bad_interrupt>
  5e:	00 00       	nop
  60:	1e c0       	rjmp	.+60     	; 0x9e <__bad_interrupt>
  62:	00 00       	nop
  64:	1c c0       	rjmp	.+56     	; 0x9e <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e4       	ldi	r30, 0x40	; 64
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 34       	cpi	r26, 0x48	; 72
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e4       	ldi	r26, 0x48	; 72
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 36       	cpi	r26, 0x6F	; 111
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	86 d0       	rcall	.+268    	; 0x1a8 <main>
  9c:	cf c5       	rjmp	.+2974   	; 0xc3c <_exit>

0000009e <__bad_interrupt>:
  9e:	b0 cf       	rjmp	.-160    	; 0x0 <__vectors>

000000a0 <servo_init>:
const static uint16_t servo_min = 187;	//750 / 4us;

void servo_init(void) {
	// Set pin to output - OC1A
	// Connect servo signal pin to PORTB.1, pin 9 on Arduino
	DDRB |= (1<<PB1);
  a0:	21 9a       	sbi	0x04, 1	; 4
	
	// Timer Top
	ICR1 = 4999; // (16MHz/64/50Hz) = 1+TOP -> page 102 in ATmega328P datasheet
  a2:	87 e8       	ldi	r24, 0x87	; 135
  a4:	93 e1       	ldi	r25, 0x13	; 19
  a6:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
  aa:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
}

/*! \param p 0-255 */
void servo_set(uint8_t p) {
	uint16_t pos = (servo_max-servo_min)*(p/180.0) + servo_min;
	OCR1A = pos;
  ae:	86 e7       	ldi	r24, 0x76	; 118
  b0:	91 e0       	ldi	r25, 0x01	; 1
  b2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  b6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	// Scale servo range for 0 to 180 degrees, 90 degrees is neutral position
	servo_set(90);
			
	// Set mode and start timer (Timer1)
	// Modes of operation on Page 109 of ATmega328P datasheet
	TCCR1A |= (0<<WGM10) | (1<<WGM11) | (1<<COM1A1) | (0<<COM1A0);			// Fast pwm = 14 & Enable pwm on OC1A
  ba:	e0 e8       	ldi	r30, 0x80	; 128
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	82 68       	ori	r24, 0x82	; 130
  c2:	80 83       	st	Z, r24
	TCCR1B |= (1<<WGM12) | (1<<WGM13) | (0<<CS12) | (1<<CS11) | (1<<CS10);	// Fast pwm = 14 & Clk/64
  c4:	e1 e8       	ldi	r30, 0x81	; 129
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	8b 61       	ori	r24, 0x1B	; 27
  cc:	80 83       	st	Z, r24
  ce:	08 95       	ret

000000d0 <servo_set>:
}

/*! \param p 0-255 */
void servo_set(uint8_t p) {
	uint16_t pos = (servo_max-servo_min)*(p/180.0) + servo_min;
  d0:	68 2f       	mov	r22, r24
  d2:	70 e0       	ldi	r23, 0x00	; 0
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	ea d1       	rcall	.+980    	; 0x4ae <__floatsisf>
  da:	20 e0       	ldi	r18, 0x00	; 0
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	44 e3       	ldi	r20, 0x34	; 52
  e0:	53 e4       	ldi	r21, 0x43	; 67
  e2:	4f d1       	rcall	.+670    	; 0x382 <__divsf3>
  e4:	20 e0       	ldi	r18, 0x00	; 0
  e6:	30 e8       	ldi	r19, 0x80	; 128
  e8:	4b eb       	ldi	r20, 0xBB	; 187
  ea:	53 e4       	ldi	r21, 0x43	; 67
  ec:	6c d2       	rcall	.+1240   	; 0x5c6 <__mulsf3>
  ee:	20 e0       	ldi	r18, 0x00	; 0
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	4b e3       	ldi	r20, 0x3B	; 59
  f4:	53 e4       	ldi	r21, 0x43	; 67
  f6:	e1 d0       	rcall	.+450    	; 0x2ba <__addsf3>
  f8:	ac d1       	rcall	.+856    	; 0x452 <__fixunssfsi>
	OCR1A = pos;
  fa:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  fe:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 102:	08 95       	ret

00000104 <UART_init>:

unsigned char UART_receive (void)
{
	while (!(UCSR0A & (1<<RXC0)));
	return (UDR0);
}
 104:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 108:	87 e6       	ldi	r24, 0x67	; 103
 10a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 10e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 112:	88 e1       	ldi	r24, 0x18	; 24
 114:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 118:	86 e0       	ldi	r24, 0x06	; 6
 11a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 11e:	08 95       	ret

00000120 <UART_transmit>:
 120:	e0 ec       	ldi	r30, 0xC0	; 192
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	90 81       	ld	r25, Z
 126:	95 ff       	sbrs	r25, 5
 128:	fd cf       	rjmp	.-6      	; 0x124 <UART_transmit+0x4>
 12a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 12e:	08 95       	ret

00000130 <UART_print_string>:

/*******************************************************************/

void UART_print_string (char str[])
{
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	ec 01       	movw	r28, r24
	int k = 0;
	
	while (str[k] != 0x00)
 136:	88 81       	ld	r24, Y
 138:	88 23       	and	r24, r24
 13a:	29 f0       	breq	.+10     	; 0x146 <UART_print_string+0x16>
 13c:	21 96       	adiw	r28, 0x01	; 1
	{
		UART_transmit(str[k]);
 13e:	f0 df       	rcall	.-32     	; 0x120 <UART_transmit>

void UART_print_string (char str[])
{
	int k = 0;
	
	while (str[k] != 0x00)
 140:	89 91       	ld	r24, Y+
 142:	81 11       	cpse	r24, r1
 144:	fc cf       	rjmp	.-8      	; 0x13e <UART_print_string+0xe>
	{
		UART_transmit(str[k]);
		k = k + 1;
	}
}
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	08 95       	ret

0000014c <__vector_1>:
/*******************************************************************/
/* Interrupt Service Routine for External Interrupt 0 */
/* Turn on/off the LED */

ISR(INT0_vect)
{
 14c:	1f 92       	push	r1
 14e:	0f 92       	push	r0
 150:	0f b6       	in	r0, 0x3f	; 63
 152:	0f 92       	push	r0
 154:	11 24       	eor	r1, r1
 156:	8f 93       	push	r24
 158:	9f 93       	push	r25
	temp = temp - 1;
 15a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 15e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 168:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	// itoa(temp, output, 10);
	// UART_print_string(output);
	// UART_print_string("BAAAAAAD");
	
}
 16c:	9f 91       	pop	r25
 16e:	8f 91       	pop	r24
 170:	0f 90       	pop	r0
 172:	0f be       	out	0x3f, r0	; 63
 174:	0f 90       	pop	r0
 176:	1f 90       	pop	r1
 178:	18 95       	reti

0000017a <__vector_2>:
ISR(INT1_vect)
{
 17a:	1f 92       	push	r1
 17c:	0f 92       	push	r0
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	0f 92       	push	r0
 182:	11 24       	eor	r1, r1
 184:	8f 93       	push	r24
 186:	9f 93       	push	r25
	temp = temp + 1;
 188:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 18c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 190:	01 96       	adiw	r24, 0x01	; 1
 192:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 196:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	// itoa(temp, output, 10);
	// UART_print_string(output);
	// UART_print_string("BAAAAAAD");
	
}
 19a:	9f 91       	pop	r25
 19c:	8f 91       	pop	r24
 19e:	0f 90       	pop	r0
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	0f 90       	pop	r0
 1a4:	1f 90       	pop	r1
 1a6:	18 95       	reti

000001a8 <main>:
/*******************************************************************/

int main(void)
{

	DDRB = DDRB | (1 << PB5);			// OR Mask - set PB5 on PORTB to output
 1a8:	25 9a       	sbi	0x04, 5	; 4
	PORTB = PORTB & ~(1 << PB5);		// AND mask to clear only PB5 - turn off LED
 1aa:	2d 98       	cbi	0x05, 5	; 5
	
	PORTD = PORTD | (1 << PD2);			// Pull up PD2 which is external INT0
 1ac:	5a 9a       	sbi	0x0b, 2	; 11
	PORTD = PORTD | (1 << PD3);         // Pull up PD3 which is external INT1
 1ae:	5b 9a       	sbi	0x0b, 3	; 11
		
	/* Enable INT0 external interrupt */
	// EICRA = ( 1<<ISC01 ) | ( 1<<ISC00 );	// Set interrupt trigger to a falling edge
	EICRA = 0xF; // See EICRA for INT0 and INT1 falling edge configuration
 1b0:	8f e0       	ldi	r24, 0x0F	; 15
 1b2:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	//EIMSK = ( 1<<INT0);					// Set INT0 enable bit
	//EIMSK = ( 1<<INT1);
	EIMSK = 0x3;
 1b6:	83 e0       	ldi	r24, 0x03	; 3
 1b8:	8d bb       	out	0x1d, r24	; 29

	/* Enable global interrupts */
	sei();
 1ba:	78 94       	sei
	
	UART_init();
 1bc:	a3 df       	rcall	.-186    	; 0x104 <UART_init>
	int pos = 0;
	servo_init();
 1be:	70 df       	rcall	.-288    	; 0xa0 <servo_init>
 1c0:	ea e7       	ldi	r30, 0x7A	; 122
	//_delay_ms(500);
	
	unsigned char channel = 0;			// Connect analog signal to PORTF.0, Channel 0
	unsigned int adc_data;				// Variable for ADC results
	
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	87 e8       	ldi	r24, 0x87	; 135
 1c6:	80 83       	st	Z, r24
 1c8:	ac e7       	ldi	r26, 0x7C	; 124
	ADMUX |= (1 << REFS0) | channel;	// Set reference to AVCC and channel
 1ca:	b0 e0       	ldi	r27, 0x00	; 0
 1cc:	8c 91       	ld	r24, X
 1ce:	80 64       	ori	r24, 0x40	; 64
 1d0:	8c 93       	st	X, r24
 1d2:	80 81       	ld	r24, Z
	ADCSRA |= (1 << ADSC);				// Set the bit to start the conversion
 1d4:	80 64       	ori	r24, 0x40	; 64
 1d6:	80 83       	st	Z, r24
 1d8:	82 e0       	ldi	r24, 0x02	; 2
	UART_print_string("THIS IS THE START OF THE PROGRAM\n\n");
 1da:	91 e0       	ldi	r25, 0x01	; 1
 1dc:	a9 df       	rcall	.-174    	; 0x130 <UART_print_string>
 1de:	a1 2c       	mov	r10, r1

	/* Enable global interrupts */
	sei();
	
	UART_init();
	int pos = 0;
 1e0:	b1 2c       	mov	r11, r1
 1e2:	ca e7       	ldi	r28, 0x7A	; 122
	ADCSRA |= (1 << ADSC);				// Set the bit to start the conversion
	UART_print_string("THIS IS THE START OF THE PROGRAM\n\n");
	while(1)
	{
		// Your program here
		while(ADCSRA & (1 <<ADSC));		// Waits for ADC conversion to complete
 1e4:	d0 e0       	ldi	r29, 0x00	; 0
 1e6:	0f 2e       	mov	r0, r31
		adc_data = ADCW;				// Read all 10 bits into variable
 1e8:	f8 e7       	ldi	r31, 0x78	; 120
 1ea:	cf 2e       	mov	r12, r31
 1ec:	d1 2c       	mov	r13, r1
 1ee:	f0 2d       	mov	r31, r0
 1f0:	0f 2e       	mov	r0, r31
		
		float voltage = adc_data * (5000 / 1024.0);
		float Ctemp = voltage / 10;
		Ftemp = (Ctemp * 9)/5 + 32;
		UART_print_string("\n\n");
		sprintf(output, "Current Temp: %d Desired Temp: %d\r", Ftemp, temp);
 1f2:	f5 e2       	ldi	r31, 0x25	; 37
 1f4:	ef 2e       	mov	r14, r31
 1f6:	f1 e0       	ldi	r31, 0x01	; 1
 1f8:	ff 2e       	mov	r15, r31
 1fa:	f0 2d       	mov	r31, r0
 1fc:	08 e4       	ldi	r16, 0x48	; 72
 1fe:	11 e0       	ldi	r17, 0x01	; 1
 200:	88 81       	ld	r24, Y
	ADCSRA |= (1 << ADSC);				// Set the bit to start the conversion
	UART_print_string("THIS IS THE START OF THE PROGRAM\n\n");
	while(1)
	{
		// Your program here
		while(ADCSRA & (1 <<ADSC));		// Waits for ADC conversion to complete
 202:	86 fd       	sbrc	r24, 6
 204:	fd cf       	rjmp	.-6      	; 0x200 <main+0x58>
 206:	f6 01       	movw	r30, r12
		adc_data = ADCW;				// Read all 10 bits into variable
 208:	60 81       	ld	r22, Z
 20a:	71 81       	ldd	r23, Z+1	; 0x01
		
		float voltage = adc_data * (5000 / 1024.0);
		float Ctemp = voltage / 10;
		Ftemp = (Ctemp * 9)/5 + 32;
 20c:	80 e0       	ldi	r24, 0x00	; 0
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	4c d1       	rcall	.+664    	; 0x4aa <__floatunsisf>
 212:	20 e0       	ldi	r18, 0x00	; 0
 214:	30 e4       	ldi	r19, 0x40	; 64
 216:	4c e9       	ldi	r20, 0x9C	; 156
 218:	50 e4       	ldi	r21, 0x40	; 64
 21a:	d5 d1       	rcall	.+938    	; 0x5c6 <__mulsf3>
 21c:	20 e0       	ldi	r18, 0x00	; 0
 21e:	30 e0       	ldi	r19, 0x00	; 0
 220:	40 e2       	ldi	r20, 0x20	; 32
 222:	51 e4       	ldi	r21, 0x41	; 65
 224:	ae d0       	rcall	.+348    	; 0x382 <__divsf3>
 226:	20 e0       	ldi	r18, 0x00	; 0
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	40 e1       	ldi	r20, 0x10	; 16
 22c:	51 e4       	ldi	r21, 0x41	; 65
 22e:	cb d1       	rcall	.+918    	; 0x5c6 <__mulsf3>
 230:	20 e0       	ldi	r18, 0x00	; 0
 232:	30 e0       	ldi	r19, 0x00	; 0
 234:	40 ea       	ldi	r20, 0xA0	; 160
 236:	50 e4       	ldi	r21, 0x40	; 64
 238:	a4 d0       	rcall	.+328    	; 0x382 <__divsf3>
 23a:	20 e0       	ldi	r18, 0x00	; 0
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	40 e0       	ldi	r20, 0x00	; 0
 240:	52 e4       	ldi	r21, 0x42	; 66
 242:	3b d0       	rcall	.+118    	; 0x2ba <__addsf3>
 244:	06 d1       	rcall	.+524    	; 0x452 <__fixunssfsi>
 246:	70 93 6d 01 	sts	0x016D, r23	; 0x80016d <Ftemp+0x1>
 24a:	60 93 6c 01 	sts	0x016C, r22	; 0x80016c <Ftemp>
		UART_print_string("\n\n");
 24e:	82 e2       	ldi	r24, 0x22	; 34
 250:	91 e0       	ldi	r25, 0x01	; 1
 252:	6e df       	rcall	.-292    	; 0x130 <UART_print_string>
 254:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
		sprintf(output, "Current Temp: %d Desired Temp: %d\r", Ftemp, temp);
 258:	8f 93       	push	r24
 25a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 25e:	8f 93       	push	r24
 260:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <Ftemp+0x1>
 264:	8f 93       	push	r24
 266:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <Ftemp>
 26a:	8f 93       	push	r24
 26c:	ff 92       	push	r15
 26e:	ef 92       	push	r14
 270:	1f 93       	push	r17
 272:	0f 93       	push	r16
 274:	0b d2       	rcall	.+1046   	; 0x68c <sprintf>
		UART_print_string(output);
 276:	c8 01       	movw	r24, r16
 278:	5b df       	rcall	.-330    	; 0x130 <UART_print_string>
 27a:	8d b7       	in	r24, 0x3d	; 61
		
		if (Ftemp > temp) {
 27c:	9e b7       	in	r25, 0x3e	; 62
 27e:	08 96       	adiw	r24, 0x08	; 8
 280:	0f b6       	in	r0, 0x3f	; 63
 282:	f8 94       	cli
 284:	9e bf       	out	0x3e, r25	; 62
 286:	0f be       	out	0x3f, r0	; 63
 288:	8d bf       	out	0x3d, r24	; 61
 28a:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <Ftemp>
 28e:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <Ftemp+0x1>
 292:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 296:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 29a:	82 17       	cp	r24, r18
 29c:	93 07       	cpc	r25, r19
 29e:	38 f4       	brcc	.+14     	; 0x2ae <main+0x106>
			pos += 1;
 2a0:	9f ef       	ldi	r25, 0xFF	; 255
 2a2:	a9 1a       	sub	r10, r25
 2a4:	b9 0a       	sbc	r11, r25
			servo_set(pos);
 2a6:	8a 2d       	mov	r24, r10
 2a8:	13 df       	rcall	.-474    	; 0xd0 <servo_set>
 2aa:	2d 9a       	sbi	0x05, 5	; 5
			PORTB = PORTB | (1 << PB5);
 2ac:	01 c0       	rjmp	.+2      	; 0x2b0 <main+0x108>
 2ae:	2d 98       	cbi	0x05, 5	; 5
			// _delay_ms(15);
			// sprintf(output, "Current Temp: %d Desired Temp: %d\r\n\n", Ftemp, temp);
			// UART_print_string(output);
		} else PORTB = PORTB & ~(1 << PB5);	// AND mask to clear only PB5 - turn off LED
 2b0:	88 81       	ld	r24, Y

		ADCSRA |= (1 << ADSC);			// Set the bit to start conversion again
 2b2:	80 64       	ori	r24, 0x40	; 64
 2b4:	88 83       	st	Y, r24
 2b6:	a4 cf       	rjmp	.-184    	; 0x200 <main+0x58>

000002b8 <__subsf3>:
	}
 2b8:	50 58       	subi	r21, 0x80	; 128

000002ba <__addsf3>:
 2ba:	bb 27       	eor	r27, r27
 2bc:	aa 27       	eor	r26, r26
 2be:	0e d0       	rcall	.+28     	; 0x2dc <__addsf3x>
 2c0:	48 c1       	rjmp	.+656    	; 0x552 <__fp_round>
 2c2:	39 d1       	rcall	.+626    	; 0x536 <__fp_pscA>
 2c4:	30 f0       	brcs	.+12     	; 0x2d2 <__addsf3+0x18>
 2c6:	3e d1       	rcall	.+636    	; 0x544 <__fp_pscB>
 2c8:	20 f0       	brcs	.+8      	; 0x2d2 <__addsf3+0x18>
 2ca:	31 f4       	brne	.+12     	; 0x2d8 <__addsf3+0x1e>
 2cc:	9f 3f       	cpi	r25, 0xFF	; 255
 2ce:	11 f4       	brne	.+4      	; 0x2d4 <__addsf3+0x1a>
 2d0:	1e f4       	brtc	.+6      	; 0x2d8 <__addsf3+0x1e>
 2d2:	2e c1       	rjmp	.+604    	; 0x530 <__fp_nan>
 2d4:	0e f4       	brtc	.+2      	; 0x2d8 <__addsf3+0x1e>
 2d6:	e0 95       	com	r30
 2d8:	e7 fb       	bst	r30, 7
 2da:	24 c1       	rjmp	.+584    	; 0x524 <__fp_inf>

000002dc <__addsf3x>:
 2dc:	e9 2f       	mov	r30, r25
 2de:	4a d1       	rcall	.+660    	; 0x574 <__fp_split3>
 2e0:	80 f3       	brcs	.-32     	; 0x2c2 <__addsf3+0x8>
 2e2:	ba 17       	cp	r27, r26
 2e4:	62 07       	cpc	r22, r18
 2e6:	73 07       	cpc	r23, r19
 2e8:	84 07       	cpc	r24, r20
 2ea:	95 07       	cpc	r25, r21
 2ec:	18 f0       	brcs	.+6      	; 0x2f4 <__addsf3x+0x18>
 2ee:	71 f4       	brne	.+28     	; 0x30c <__addsf3x+0x30>
 2f0:	9e f5       	brtc	.+102    	; 0x358 <__addsf3x+0x7c>
 2f2:	62 c1       	rjmp	.+708    	; 0x5b8 <__fp_zero>
 2f4:	0e f4       	brtc	.+2      	; 0x2f8 <__addsf3x+0x1c>
 2f6:	e0 95       	com	r30
 2f8:	0b 2e       	mov	r0, r27
 2fa:	ba 2f       	mov	r27, r26
 2fc:	a0 2d       	mov	r26, r0
 2fe:	0b 01       	movw	r0, r22
 300:	b9 01       	movw	r22, r18
 302:	90 01       	movw	r18, r0
 304:	0c 01       	movw	r0, r24
 306:	ca 01       	movw	r24, r20
 308:	a0 01       	movw	r20, r0
 30a:	11 24       	eor	r1, r1
 30c:	ff 27       	eor	r31, r31
 30e:	59 1b       	sub	r21, r25
 310:	99 f0       	breq	.+38     	; 0x338 <__addsf3x+0x5c>
 312:	59 3f       	cpi	r21, 0xF9	; 249
 314:	50 f4       	brcc	.+20     	; 0x32a <__addsf3x+0x4e>
 316:	50 3e       	cpi	r21, 0xE0	; 224
 318:	68 f1       	brcs	.+90     	; 0x374 <__addsf3x+0x98>
 31a:	1a 16       	cp	r1, r26
 31c:	f0 40       	sbci	r31, 0x00	; 0
 31e:	a2 2f       	mov	r26, r18
 320:	23 2f       	mov	r18, r19
 322:	34 2f       	mov	r19, r20
 324:	44 27       	eor	r20, r20
 326:	58 5f       	subi	r21, 0xF8	; 248
 328:	f3 cf       	rjmp	.-26     	; 0x310 <__addsf3x+0x34>
 32a:	46 95       	lsr	r20
 32c:	37 95       	ror	r19
 32e:	27 95       	ror	r18
 330:	a7 95       	ror	r26
 332:	f0 40       	sbci	r31, 0x00	; 0
 334:	53 95       	inc	r21
 336:	c9 f7       	brne	.-14     	; 0x32a <__addsf3x+0x4e>
 338:	7e f4       	brtc	.+30     	; 0x358 <__addsf3x+0x7c>
 33a:	1f 16       	cp	r1, r31
 33c:	ba 0b       	sbc	r27, r26
 33e:	62 0b       	sbc	r22, r18
 340:	73 0b       	sbc	r23, r19
 342:	84 0b       	sbc	r24, r20
 344:	ba f0       	brmi	.+46     	; 0x374 <__addsf3x+0x98>
 346:	91 50       	subi	r25, 0x01	; 1
 348:	a1 f0       	breq	.+40     	; 0x372 <__addsf3x+0x96>
 34a:	ff 0f       	add	r31, r31
 34c:	bb 1f       	adc	r27, r27
 34e:	66 1f       	adc	r22, r22
 350:	77 1f       	adc	r23, r23
 352:	88 1f       	adc	r24, r24
 354:	c2 f7       	brpl	.-16     	; 0x346 <__addsf3x+0x6a>
 356:	0e c0       	rjmp	.+28     	; 0x374 <__addsf3x+0x98>
 358:	ba 0f       	add	r27, r26
 35a:	62 1f       	adc	r22, r18
 35c:	73 1f       	adc	r23, r19
 35e:	84 1f       	adc	r24, r20
 360:	48 f4       	brcc	.+18     	; 0x374 <__addsf3x+0x98>
 362:	87 95       	ror	r24
 364:	77 95       	ror	r23
 366:	67 95       	ror	r22
 368:	b7 95       	ror	r27
 36a:	f7 95       	ror	r31
 36c:	9e 3f       	cpi	r25, 0xFE	; 254
 36e:	08 f0       	brcs	.+2      	; 0x372 <__addsf3x+0x96>
 370:	b3 cf       	rjmp	.-154    	; 0x2d8 <__addsf3+0x1e>
 372:	93 95       	inc	r25
 374:	88 0f       	add	r24, r24
 376:	08 f0       	brcs	.+2      	; 0x37a <__addsf3x+0x9e>
 378:	99 27       	eor	r25, r25
 37a:	ee 0f       	add	r30, r30
 37c:	97 95       	ror	r25
 37e:	87 95       	ror	r24
 380:	08 95       	ret

00000382 <__divsf3>:
 382:	0c d0       	rcall	.+24     	; 0x39c <__divsf3x>
 384:	e6 c0       	rjmp	.+460    	; 0x552 <__fp_round>
 386:	de d0       	rcall	.+444    	; 0x544 <__fp_pscB>
 388:	40 f0       	brcs	.+16     	; 0x39a <__divsf3+0x18>
 38a:	d5 d0       	rcall	.+426    	; 0x536 <__fp_pscA>
 38c:	30 f0       	brcs	.+12     	; 0x39a <__divsf3+0x18>
 38e:	21 f4       	brne	.+8      	; 0x398 <__divsf3+0x16>
 390:	5f 3f       	cpi	r21, 0xFF	; 255
 392:	19 f0       	breq	.+6      	; 0x39a <__divsf3+0x18>
 394:	c7 c0       	rjmp	.+398    	; 0x524 <__fp_inf>
 396:	51 11       	cpse	r21, r1
 398:	10 c1       	rjmp	.+544    	; 0x5ba <__fp_szero>
 39a:	ca c0       	rjmp	.+404    	; 0x530 <__fp_nan>

0000039c <__divsf3x>:
 39c:	eb d0       	rcall	.+470    	; 0x574 <__fp_split3>
 39e:	98 f3       	brcs	.-26     	; 0x386 <__divsf3+0x4>

000003a0 <__divsf3_pse>:
 3a0:	99 23       	and	r25, r25
 3a2:	c9 f3       	breq	.-14     	; 0x396 <__divsf3+0x14>
 3a4:	55 23       	and	r21, r21
 3a6:	b1 f3       	breq	.-20     	; 0x394 <__divsf3+0x12>
 3a8:	95 1b       	sub	r25, r21
 3aa:	55 0b       	sbc	r21, r21
 3ac:	bb 27       	eor	r27, r27
 3ae:	aa 27       	eor	r26, r26
 3b0:	62 17       	cp	r22, r18
 3b2:	73 07       	cpc	r23, r19
 3b4:	84 07       	cpc	r24, r20
 3b6:	38 f0       	brcs	.+14     	; 0x3c6 <__divsf3_pse+0x26>
 3b8:	9f 5f       	subi	r25, 0xFF	; 255
 3ba:	5f 4f       	sbci	r21, 0xFF	; 255
 3bc:	22 0f       	add	r18, r18
 3be:	33 1f       	adc	r19, r19
 3c0:	44 1f       	adc	r20, r20
 3c2:	aa 1f       	adc	r26, r26
 3c4:	a9 f3       	breq	.-22     	; 0x3b0 <__divsf3_pse+0x10>
 3c6:	33 d0       	rcall	.+102    	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3c8:	0e 2e       	mov	r0, r30
 3ca:	3a f0       	brmi	.+14     	; 0x3da <__divsf3_pse+0x3a>
 3cc:	e0 e8       	ldi	r30, 0x80	; 128
 3ce:	30 d0       	rcall	.+96     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 3d0:	91 50       	subi	r25, 0x01	; 1
 3d2:	50 40       	sbci	r21, 0x00	; 0
 3d4:	e6 95       	lsr	r30
 3d6:	00 1c       	adc	r0, r0
 3d8:	ca f7       	brpl	.-14     	; 0x3cc <__divsf3_pse+0x2c>
 3da:	29 d0       	rcall	.+82     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3dc:	fe 2f       	mov	r31, r30
 3de:	27 d0       	rcall	.+78     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3e0:	66 0f       	add	r22, r22
 3e2:	77 1f       	adc	r23, r23
 3e4:	88 1f       	adc	r24, r24
 3e6:	bb 1f       	adc	r27, r27
 3e8:	26 17       	cp	r18, r22
 3ea:	37 07       	cpc	r19, r23
 3ec:	48 07       	cpc	r20, r24
 3ee:	ab 07       	cpc	r26, r27
 3f0:	b0 e8       	ldi	r27, 0x80	; 128
 3f2:	09 f0       	breq	.+2      	; 0x3f6 <__divsf3_pse+0x56>
 3f4:	bb 0b       	sbc	r27, r27
 3f6:	80 2d       	mov	r24, r0
 3f8:	bf 01       	movw	r22, r30
 3fa:	ff 27       	eor	r31, r31
 3fc:	93 58       	subi	r25, 0x83	; 131
 3fe:	5f 4f       	sbci	r21, 0xFF	; 255
 400:	2a f0       	brmi	.+10     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 402:	9e 3f       	cpi	r25, 0xFE	; 254
 404:	51 05       	cpc	r21, r1
 406:	68 f0       	brcs	.+26     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 408:	8d c0       	rjmp	.+282    	; 0x524 <__fp_inf>
 40a:	d7 c0       	rjmp	.+430    	; 0x5ba <__fp_szero>
 40c:	5f 3f       	cpi	r21, 0xFF	; 255
 40e:	ec f3       	brlt	.-6      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 410:	98 3e       	cpi	r25, 0xE8	; 232
 412:	dc f3       	brlt	.-10     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 414:	86 95       	lsr	r24
 416:	77 95       	ror	r23
 418:	67 95       	ror	r22
 41a:	b7 95       	ror	r27
 41c:	f7 95       	ror	r31
 41e:	9f 5f       	subi	r25, 0xFF	; 255
 420:	c9 f7       	brne	.-14     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 422:	88 0f       	add	r24, r24
 424:	91 1d       	adc	r25, r1
 426:	96 95       	lsr	r25
 428:	87 95       	ror	r24
 42a:	97 f9       	bld	r25, 7
 42c:	08 95       	ret
 42e:	e1 e0       	ldi	r30, 0x01	; 1
 430:	66 0f       	add	r22, r22
 432:	77 1f       	adc	r23, r23
 434:	88 1f       	adc	r24, r24
 436:	bb 1f       	adc	r27, r27
 438:	62 17       	cp	r22, r18
 43a:	73 07       	cpc	r23, r19
 43c:	84 07       	cpc	r24, r20
 43e:	ba 07       	cpc	r27, r26
 440:	20 f0       	brcs	.+8      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 442:	62 1b       	sub	r22, r18
 444:	73 0b       	sbc	r23, r19
 446:	84 0b       	sbc	r24, r20
 448:	ba 0b       	sbc	r27, r26
 44a:	ee 1f       	adc	r30, r30
 44c:	88 f7       	brcc	.-30     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 44e:	e0 95       	com	r30
 450:	08 95       	ret

00000452 <__fixunssfsi>:
 452:	98 d0       	rcall	.+304    	; 0x584 <__fp_splitA>
 454:	88 f0       	brcs	.+34     	; 0x478 <__fixunssfsi+0x26>
 456:	9f 57       	subi	r25, 0x7F	; 127
 458:	90 f0       	brcs	.+36     	; 0x47e <__fixunssfsi+0x2c>
 45a:	b9 2f       	mov	r27, r25
 45c:	99 27       	eor	r25, r25
 45e:	b7 51       	subi	r27, 0x17	; 23
 460:	a0 f0       	brcs	.+40     	; 0x48a <__fixunssfsi+0x38>
 462:	d1 f0       	breq	.+52     	; 0x498 <__fixunssfsi+0x46>
 464:	66 0f       	add	r22, r22
 466:	77 1f       	adc	r23, r23
 468:	88 1f       	adc	r24, r24
 46a:	99 1f       	adc	r25, r25
 46c:	1a f0       	brmi	.+6      	; 0x474 <__fixunssfsi+0x22>
 46e:	ba 95       	dec	r27
 470:	c9 f7       	brne	.-14     	; 0x464 <__fixunssfsi+0x12>
 472:	12 c0       	rjmp	.+36     	; 0x498 <__fixunssfsi+0x46>
 474:	b1 30       	cpi	r27, 0x01	; 1
 476:	81 f0       	breq	.+32     	; 0x498 <__fixunssfsi+0x46>
 478:	9f d0       	rcall	.+318    	; 0x5b8 <__fp_zero>
 47a:	b1 e0       	ldi	r27, 0x01	; 1
 47c:	08 95       	ret
 47e:	9c c0       	rjmp	.+312    	; 0x5b8 <__fp_zero>
 480:	67 2f       	mov	r22, r23
 482:	78 2f       	mov	r23, r24
 484:	88 27       	eor	r24, r24
 486:	b8 5f       	subi	r27, 0xF8	; 248
 488:	39 f0       	breq	.+14     	; 0x498 <__fixunssfsi+0x46>
 48a:	b9 3f       	cpi	r27, 0xF9	; 249
 48c:	cc f3       	brlt	.-14     	; 0x480 <__fixunssfsi+0x2e>
 48e:	86 95       	lsr	r24
 490:	77 95       	ror	r23
 492:	67 95       	ror	r22
 494:	b3 95       	inc	r27
 496:	d9 f7       	brne	.-10     	; 0x48e <__fixunssfsi+0x3c>
 498:	3e f4       	brtc	.+14     	; 0x4a8 <__fixunssfsi+0x56>
 49a:	90 95       	com	r25
 49c:	80 95       	com	r24
 49e:	70 95       	com	r23
 4a0:	61 95       	neg	r22
 4a2:	7f 4f       	sbci	r23, 0xFF	; 255
 4a4:	8f 4f       	sbci	r24, 0xFF	; 255
 4a6:	9f 4f       	sbci	r25, 0xFF	; 255
 4a8:	08 95       	ret

000004aa <__floatunsisf>:
 4aa:	e8 94       	clt
 4ac:	09 c0       	rjmp	.+18     	; 0x4c0 <__floatsisf+0x12>

000004ae <__floatsisf>:
 4ae:	97 fb       	bst	r25, 7
 4b0:	3e f4       	brtc	.+14     	; 0x4c0 <__floatsisf+0x12>
 4b2:	90 95       	com	r25
 4b4:	80 95       	com	r24
 4b6:	70 95       	com	r23
 4b8:	61 95       	neg	r22
 4ba:	7f 4f       	sbci	r23, 0xFF	; 255
 4bc:	8f 4f       	sbci	r24, 0xFF	; 255
 4be:	9f 4f       	sbci	r25, 0xFF	; 255
 4c0:	99 23       	and	r25, r25
 4c2:	a9 f0       	breq	.+42     	; 0x4ee <__floatsisf+0x40>
 4c4:	f9 2f       	mov	r31, r25
 4c6:	96 e9       	ldi	r25, 0x96	; 150
 4c8:	bb 27       	eor	r27, r27
 4ca:	93 95       	inc	r25
 4cc:	f6 95       	lsr	r31
 4ce:	87 95       	ror	r24
 4d0:	77 95       	ror	r23
 4d2:	67 95       	ror	r22
 4d4:	b7 95       	ror	r27
 4d6:	f1 11       	cpse	r31, r1
 4d8:	f8 cf       	rjmp	.-16     	; 0x4ca <__floatsisf+0x1c>
 4da:	fa f4       	brpl	.+62     	; 0x51a <__floatsisf+0x6c>
 4dc:	bb 0f       	add	r27, r27
 4de:	11 f4       	brne	.+4      	; 0x4e4 <__floatsisf+0x36>
 4e0:	60 ff       	sbrs	r22, 0
 4e2:	1b c0       	rjmp	.+54     	; 0x51a <__floatsisf+0x6c>
 4e4:	6f 5f       	subi	r22, 0xFF	; 255
 4e6:	7f 4f       	sbci	r23, 0xFF	; 255
 4e8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ea:	9f 4f       	sbci	r25, 0xFF	; 255
 4ec:	16 c0       	rjmp	.+44     	; 0x51a <__floatsisf+0x6c>
 4ee:	88 23       	and	r24, r24
 4f0:	11 f0       	breq	.+4      	; 0x4f6 <__floatsisf+0x48>
 4f2:	96 e9       	ldi	r25, 0x96	; 150
 4f4:	11 c0       	rjmp	.+34     	; 0x518 <__floatsisf+0x6a>
 4f6:	77 23       	and	r23, r23
 4f8:	21 f0       	breq	.+8      	; 0x502 <__floatsisf+0x54>
 4fa:	9e e8       	ldi	r25, 0x8E	; 142
 4fc:	87 2f       	mov	r24, r23
 4fe:	76 2f       	mov	r23, r22
 500:	05 c0       	rjmp	.+10     	; 0x50c <__floatsisf+0x5e>
 502:	66 23       	and	r22, r22
 504:	71 f0       	breq	.+28     	; 0x522 <__floatsisf+0x74>
 506:	96 e8       	ldi	r25, 0x86	; 134
 508:	86 2f       	mov	r24, r22
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	60 e0       	ldi	r22, 0x00	; 0
 50e:	2a f0       	brmi	.+10     	; 0x51a <__floatsisf+0x6c>
 510:	9a 95       	dec	r25
 512:	66 0f       	add	r22, r22
 514:	77 1f       	adc	r23, r23
 516:	88 1f       	adc	r24, r24
 518:	da f7       	brpl	.-10     	; 0x510 <__floatsisf+0x62>
 51a:	88 0f       	add	r24, r24
 51c:	96 95       	lsr	r25
 51e:	87 95       	ror	r24
 520:	97 f9       	bld	r25, 7
 522:	08 95       	ret

00000524 <__fp_inf>:
 524:	97 f9       	bld	r25, 7
 526:	9f 67       	ori	r25, 0x7F	; 127
 528:	80 e8       	ldi	r24, 0x80	; 128
 52a:	70 e0       	ldi	r23, 0x00	; 0
 52c:	60 e0       	ldi	r22, 0x00	; 0
 52e:	08 95       	ret

00000530 <__fp_nan>:
 530:	9f ef       	ldi	r25, 0xFF	; 255
 532:	80 ec       	ldi	r24, 0xC0	; 192
 534:	08 95       	ret

00000536 <__fp_pscA>:
 536:	00 24       	eor	r0, r0
 538:	0a 94       	dec	r0
 53a:	16 16       	cp	r1, r22
 53c:	17 06       	cpc	r1, r23
 53e:	18 06       	cpc	r1, r24
 540:	09 06       	cpc	r0, r25
 542:	08 95       	ret

00000544 <__fp_pscB>:
 544:	00 24       	eor	r0, r0
 546:	0a 94       	dec	r0
 548:	12 16       	cp	r1, r18
 54a:	13 06       	cpc	r1, r19
 54c:	14 06       	cpc	r1, r20
 54e:	05 06       	cpc	r0, r21
 550:	08 95       	ret

00000552 <__fp_round>:
 552:	09 2e       	mov	r0, r25
 554:	03 94       	inc	r0
 556:	00 0c       	add	r0, r0
 558:	11 f4       	brne	.+4      	; 0x55e <__fp_round+0xc>
 55a:	88 23       	and	r24, r24
 55c:	52 f0       	brmi	.+20     	; 0x572 <__fp_round+0x20>
 55e:	bb 0f       	add	r27, r27
 560:	40 f4       	brcc	.+16     	; 0x572 <__fp_round+0x20>
 562:	bf 2b       	or	r27, r31
 564:	11 f4       	brne	.+4      	; 0x56a <__fp_round+0x18>
 566:	60 ff       	sbrs	r22, 0
 568:	04 c0       	rjmp	.+8      	; 0x572 <__fp_round+0x20>
 56a:	6f 5f       	subi	r22, 0xFF	; 255
 56c:	7f 4f       	sbci	r23, 0xFF	; 255
 56e:	8f 4f       	sbci	r24, 0xFF	; 255
 570:	9f 4f       	sbci	r25, 0xFF	; 255
 572:	08 95       	ret

00000574 <__fp_split3>:
 574:	57 fd       	sbrc	r21, 7
 576:	90 58       	subi	r25, 0x80	; 128
 578:	44 0f       	add	r20, r20
 57a:	55 1f       	adc	r21, r21
 57c:	59 f0       	breq	.+22     	; 0x594 <__fp_splitA+0x10>
 57e:	5f 3f       	cpi	r21, 0xFF	; 255
 580:	71 f0       	breq	.+28     	; 0x59e <__fp_splitA+0x1a>
 582:	47 95       	ror	r20

00000584 <__fp_splitA>:
 584:	88 0f       	add	r24, r24
 586:	97 fb       	bst	r25, 7
 588:	99 1f       	adc	r25, r25
 58a:	61 f0       	breq	.+24     	; 0x5a4 <__fp_splitA+0x20>
 58c:	9f 3f       	cpi	r25, 0xFF	; 255
 58e:	79 f0       	breq	.+30     	; 0x5ae <__fp_splitA+0x2a>
 590:	87 95       	ror	r24
 592:	08 95       	ret
 594:	12 16       	cp	r1, r18
 596:	13 06       	cpc	r1, r19
 598:	14 06       	cpc	r1, r20
 59a:	55 1f       	adc	r21, r21
 59c:	f2 cf       	rjmp	.-28     	; 0x582 <__fp_split3+0xe>
 59e:	46 95       	lsr	r20
 5a0:	f1 df       	rcall	.-30     	; 0x584 <__fp_splitA>
 5a2:	08 c0       	rjmp	.+16     	; 0x5b4 <__fp_splitA+0x30>
 5a4:	16 16       	cp	r1, r22
 5a6:	17 06       	cpc	r1, r23
 5a8:	18 06       	cpc	r1, r24
 5aa:	99 1f       	adc	r25, r25
 5ac:	f1 cf       	rjmp	.-30     	; 0x590 <__fp_splitA+0xc>
 5ae:	86 95       	lsr	r24
 5b0:	71 05       	cpc	r23, r1
 5b2:	61 05       	cpc	r22, r1
 5b4:	08 94       	sec
 5b6:	08 95       	ret

000005b8 <__fp_zero>:
 5b8:	e8 94       	clt

000005ba <__fp_szero>:
 5ba:	bb 27       	eor	r27, r27
 5bc:	66 27       	eor	r22, r22
 5be:	77 27       	eor	r23, r23
 5c0:	cb 01       	movw	r24, r22
 5c2:	97 f9       	bld	r25, 7
 5c4:	08 95       	ret

000005c6 <__mulsf3>:
 5c6:	0b d0       	rcall	.+22     	; 0x5de <__mulsf3x>
 5c8:	c4 cf       	rjmp	.-120    	; 0x552 <__fp_round>
 5ca:	b5 df       	rcall	.-150    	; 0x536 <__fp_pscA>
 5cc:	28 f0       	brcs	.+10     	; 0x5d8 <__mulsf3+0x12>
 5ce:	ba df       	rcall	.-140    	; 0x544 <__fp_pscB>
 5d0:	18 f0       	brcs	.+6      	; 0x5d8 <__mulsf3+0x12>
 5d2:	95 23       	and	r25, r21
 5d4:	09 f0       	breq	.+2      	; 0x5d8 <__mulsf3+0x12>
 5d6:	a6 cf       	rjmp	.-180    	; 0x524 <__fp_inf>
 5d8:	ab cf       	rjmp	.-170    	; 0x530 <__fp_nan>
 5da:	11 24       	eor	r1, r1
 5dc:	ee cf       	rjmp	.-36     	; 0x5ba <__fp_szero>

000005de <__mulsf3x>:
 5de:	ca df       	rcall	.-108    	; 0x574 <__fp_split3>
 5e0:	a0 f3       	brcs	.-24     	; 0x5ca <__mulsf3+0x4>

000005e2 <__mulsf3_pse>:
 5e2:	95 9f       	mul	r25, r21
 5e4:	d1 f3       	breq	.-12     	; 0x5da <__mulsf3+0x14>
 5e6:	95 0f       	add	r25, r21
 5e8:	50 e0       	ldi	r21, 0x00	; 0
 5ea:	55 1f       	adc	r21, r21
 5ec:	62 9f       	mul	r22, r18
 5ee:	f0 01       	movw	r30, r0
 5f0:	72 9f       	mul	r23, r18
 5f2:	bb 27       	eor	r27, r27
 5f4:	f0 0d       	add	r31, r0
 5f6:	b1 1d       	adc	r27, r1
 5f8:	63 9f       	mul	r22, r19
 5fa:	aa 27       	eor	r26, r26
 5fc:	f0 0d       	add	r31, r0
 5fe:	b1 1d       	adc	r27, r1
 600:	aa 1f       	adc	r26, r26
 602:	64 9f       	mul	r22, r20
 604:	66 27       	eor	r22, r22
 606:	b0 0d       	add	r27, r0
 608:	a1 1d       	adc	r26, r1
 60a:	66 1f       	adc	r22, r22
 60c:	82 9f       	mul	r24, r18
 60e:	22 27       	eor	r18, r18
 610:	b0 0d       	add	r27, r0
 612:	a1 1d       	adc	r26, r1
 614:	62 1f       	adc	r22, r18
 616:	73 9f       	mul	r23, r19
 618:	b0 0d       	add	r27, r0
 61a:	a1 1d       	adc	r26, r1
 61c:	62 1f       	adc	r22, r18
 61e:	83 9f       	mul	r24, r19
 620:	a0 0d       	add	r26, r0
 622:	61 1d       	adc	r22, r1
 624:	22 1f       	adc	r18, r18
 626:	74 9f       	mul	r23, r20
 628:	33 27       	eor	r19, r19
 62a:	a0 0d       	add	r26, r0
 62c:	61 1d       	adc	r22, r1
 62e:	23 1f       	adc	r18, r19
 630:	84 9f       	mul	r24, r20
 632:	60 0d       	add	r22, r0
 634:	21 1d       	adc	r18, r1
 636:	82 2f       	mov	r24, r18
 638:	76 2f       	mov	r23, r22
 63a:	6a 2f       	mov	r22, r26
 63c:	11 24       	eor	r1, r1
 63e:	9f 57       	subi	r25, 0x7F	; 127
 640:	50 40       	sbci	r21, 0x00	; 0
 642:	8a f0       	brmi	.+34     	; 0x666 <__mulsf3_pse+0x84>
 644:	e1 f0       	breq	.+56     	; 0x67e <__mulsf3_pse+0x9c>
 646:	88 23       	and	r24, r24
 648:	4a f0       	brmi	.+18     	; 0x65c <__mulsf3_pse+0x7a>
 64a:	ee 0f       	add	r30, r30
 64c:	ff 1f       	adc	r31, r31
 64e:	bb 1f       	adc	r27, r27
 650:	66 1f       	adc	r22, r22
 652:	77 1f       	adc	r23, r23
 654:	88 1f       	adc	r24, r24
 656:	91 50       	subi	r25, 0x01	; 1
 658:	50 40       	sbci	r21, 0x00	; 0
 65a:	a9 f7       	brne	.-22     	; 0x646 <__mulsf3_pse+0x64>
 65c:	9e 3f       	cpi	r25, 0xFE	; 254
 65e:	51 05       	cpc	r21, r1
 660:	70 f0       	brcs	.+28     	; 0x67e <__mulsf3_pse+0x9c>
 662:	60 cf       	rjmp	.-320    	; 0x524 <__fp_inf>
 664:	aa cf       	rjmp	.-172    	; 0x5ba <__fp_szero>
 666:	5f 3f       	cpi	r21, 0xFF	; 255
 668:	ec f3       	brlt	.-6      	; 0x664 <__mulsf3_pse+0x82>
 66a:	98 3e       	cpi	r25, 0xE8	; 232
 66c:	dc f3       	brlt	.-10     	; 0x664 <__mulsf3_pse+0x82>
 66e:	86 95       	lsr	r24
 670:	77 95       	ror	r23
 672:	67 95       	ror	r22
 674:	b7 95       	ror	r27
 676:	f7 95       	ror	r31
 678:	e7 95       	ror	r30
 67a:	9f 5f       	subi	r25, 0xFF	; 255
 67c:	c1 f7       	brne	.-16     	; 0x66e <__mulsf3_pse+0x8c>
 67e:	fe 2b       	or	r31, r30
 680:	88 0f       	add	r24, r24
 682:	91 1d       	adc	r25, r1
 684:	96 95       	lsr	r25
 686:	87 95       	ror	r24
 688:	97 f9       	bld	r25, 7
 68a:	08 95       	ret

0000068c <sprintf>:
 68c:	ae e0       	ldi	r26, 0x0E	; 14
 68e:	b0 e0       	ldi	r27, 0x00	; 0
 690:	eb e4       	ldi	r30, 0x4B	; 75
 692:	f3 e0       	ldi	r31, 0x03	; 3
 694:	aa c2       	rjmp	.+1364   	; 0xbea <__prologue_saves__+0x1c>
 696:	0d 89       	ldd	r16, Y+21	; 0x15
 698:	1e 89       	ldd	r17, Y+22	; 0x16
 69a:	86 e0       	ldi	r24, 0x06	; 6
 69c:	8c 83       	std	Y+4, r24	; 0x04
 69e:	1a 83       	std	Y+2, r17	; 0x02
 6a0:	09 83       	std	Y+1, r16	; 0x01
 6a2:	8f ef       	ldi	r24, 0xFF	; 255
 6a4:	9f e7       	ldi	r25, 0x7F	; 127
 6a6:	9e 83       	std	Y+6, r25	; 0x06
 6a8:	8d 83       	std	Y+5, r24	; 0x05
 6aa:	ae 01       	movw	r20, r28
 6ac:	47 5e       	subi	r20, 0xE7	; 231
 6ae:	5f 4f       	sbci	r21, 0xFF	; 255
 6b0:	6f 89       	ldd	r22, Y+23	; 0x17
 6b2:	78 8d       	ldd	r23, Y+24	; 0x18
 6b4:	ce 01       	movw	r24, r28
 6b6:	01 96       	adiw	r24, 0x01	; 1
 6b8:	08 d0       	rcall	.+16     	; 0x6ca <vfprintf>
 6ba:	ef 81       	ldd	r30, Y+7	; 0x07
 6bc:	f8 85       	ldd	r31, Y+8	; 0x08
 6be:	e0 0f       	add	r30, r16
 6c0:	f1 1f       	adc	r31, r17
 6c2:	10 82       	st	Z, r1
 6c4:	2e 96       	adiw	r28, 0x0e	; 14
 6c6:	e4 e0       	ldi	r30, 0x04	; 4
 6c8:	ac c2       	rjmp	.+1368   	; 0xc22 <__epilogue_restores__+0x1c>

000006ca <vfprintf>:
 6ca:	ab e0       	ldi	r26, 0x0B	; 11
 6cc:	b0 e0       	ldi	r27, 0x00	; 0
 6ce:	ea e6       	ldi	r30, 0x6A	; 106
 6d0:	f3 e0       	ldi	r31, 0x03	; 3
 6d2:	7d c2       	rjmp	.+1274   	; 0xbce <__prologue_saves__>
 6d4:	6c 01       	movw	r12, r24
 6d6:	7b 01       	movw	r14, r22
 6d8:	8a 01       	movw	r16, r20
 6da:	fc 01       	movw	r30, r24
 6dc:	17 82       	std	Z+7, r1	; 0x07
 6de:	16 82       	std	Z+6, r1	; 0x06
 6e0:	83 81       	ldd	r24, Z+3	; 0x03
 6e2:	81 ff       	sbrs	r24, 1
 6e4:	bf c1       	rjmp	.+894    	; 0xa64 <__stack+0x165>
 6e6:	ce 01       	movw	r24, r28
 6e8:	01 96       	adiw	r24, 0x01	; 1
 6ea:	3c 01       	movw	r6, r24
 6ec:	f6 01       	movw	r30, r12
 6ee:	93 81       	ldd	r25, Z+3	; 0x03
 6f0:	f7 01       	movw	r30, r14
 6f2:	93 fd       	sbrc	r25, 3
 6f4:	85 91       	lpm	r24, Z+
 6f6:	93 ff       	sbrs	r25, 3
 6f8:	81 91       	ld	r24, Z+
 6fa:	7f 01       	movw	r14, r30
 6fc:	88 23       	and	r24, r24
 6fe:	09 f4       	brne	.+2      	; 0x702 <vfprintf+0x38>
 700:	ad c1       	rjmp	.+858    	; 0xa5c <__stack+0x15d>
 702:	85 32       	cpi	r24, 0x25	; 37
 704:	39 f4       	brne	.+14     	; 0x714 <vfprintf+0x4a>
 706:	93 fd       	sbrc	r25, 3
 708:	85 91       	lpm	r24, Z+
 70a:	93 ff       	sbrs	r25, 3
 70c:	81 91       	ld	r24, Z+
 70e:	7f 01       	movw	r14, r30
 710:	85 32       	cpi	r24, 0x25	; 37
 712:	21 f4       	brne	.+8      	; 0x71c <vfprintf+0x52>
 714:	b6 01       	movw	r22, r12
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	c0 d1       	rcall	.+896    	; 0xa9a <fputc>
 71a:	e8 cf       	rjmp	.-48     	; 0x6ec <vfprintf+0x22>
 71c:	91 2c       	mov	r9, r1
 71e:	21 2c       	mov	r2, r1
 720:	31 2c       	mov	r3, r1
 722:	ff e1       	ldi	r31, 0x1F	; 31
 724:	f3 15       	cp	r31, r3
 726:	d8 f0       	brcs	.+54     	; 0x75e <vfprintf+0x94>
 728:	8b 32       	cpi	r24, 0x2B	; 43
 72a:	79 f0       	breq	.+30     	; 0x74a <vfprintf+0x80>
 72c:	38 f4       	brcc	.+14     	; 0x73c <vfprintf+0x72>
 72e:	80 32       	cpi	r24, 0x20	; 32
 730:	79 f0       	breq	.+30     	; 0x750 <vfprintf+0x86>
 732:	83 32       	cpi	r24, 0x23	; 35
 734:	a1 f4       	brne	.+40     	; 0x75e <vfprintf+0x94>
 736:	23 2d       	mov	r18, r3
 738:	20 61       	ori	r18, 0x10	; 16
 73a:	1d c0       	rjmp	.+58     	; 0x776 <vfprintf+0xac>
 73c:	8d 32       	cpi	r24, 0x2D	; 45
 73e:	61 f0       	breq	.+24     	; 0x758 <vfprintf+0x8e>
 740:	80 33       	cpi	r24, 0x30	; 48
 742:	69 f4       	brne	.+26     	; 0x75e <vfprintf+0x94>
 744:	23 2d       	mov	r18, r3
 746:	21 60       	ori	r18, 0x01	; 1
 748:	16 c0       	rjmp	.+44     	; 0x776 <vfprintf+0xac>
 74a:	83 2d       	mov	r24, r3
 74c:	82 60       	ori	r24, 0x02	; 2
 74e:	38 2e       	mov	r3, r24
 750:	e3 2d       	mov	r30, r3
 752:	e4 60       	ori	r30, 0x04	; 4
 754:	3e 2e       	mov	r3, r30
 756:	2a c0       	rjmp	.+84     	; 0x7ac <vfprintf+0xe2>
 758:	f3 2d       	mov	r31, r3
 75a:	f8 60       	ori	r31, 0x08	; 8
 75c:	1d c0       	rjmp	.+58     	; 0x798 <vfprintf+0xce>
 75e:	37 fc       	sbrc	r3, 7
 760:	2d c0       	rjmp	.+90     	; 0x7bc <vfprintf+0xf2>
 762:	20 ed       	ldi	r18, 0xD0	; 208
 764:	28 0f       	add	r18, r24
 766:	2a 30       	cpi	r18, 0x0A	; 10
 768:	40 f0       	brcs	.+16     	; 0x77a <vfprintf+0xb0>
 76a:	8e 32       	cpi	r24, 0x2E	; 46
 76c:	b9 f4       	brne	.+46     	; 0x79c <vfprintf+0xd2>
 76e:	36 fc       	sbrc	r3, 6
 770:	75 c1       	rjmp	.+746    	; 0xa5c <__stack+0x15d>
 772:	23 2d       	mov	r18, r3
 774:	20 64       	ori	r18, 0x40	; 64
 776:	32 2e       	mov	r3, r18
 778:	19 c0       	rjmp	.+50     	; 0x7ac <vfprintf+0xe2>
 77a:	36 fe       	sbrs	r3, 6
 77c:	06 c0       	rjmp	.+12     	; 0x78a <vfprintf+0xc0>
 77e:	8a e0       	ldi	r24, 0x0A	; 10
 780:	98 9e       	mul	r9, r24
 782:	20 0d       	add	r18, r0
 784:	11 24       	eor	r1, r1
 786:	92 2e       	mov	r9, r18
 788:	11 c0       	rjmp	.+34     	; 0x7ac <vfprintf+0xe2>
 78a:	ea e0       	ldi	r30, 0x0A	; 10
 78c:	2e 9e       	mul	r2, r30
 78e:	20 0d       	add	r18, r0
 790:	11 24       	eor	r1, r1
 792:	22 2e       	mov	r2, r18
 794:	f3 2d       	mov	r31, r3
 796:	f0 62       	ori	r31, 0x20	; 32
 798:	3f 2e       	mov	r3, r31
 79a:	08 c0       	rjmp	.+16     	; 0x7ac <vfprintf+0xe2>
 79c:	8c 36       	cpi	r24, 0x6C	; 108
 79e:	21 f4       	brne	.+8      	; 0x7a8 <vfprintf+0xde>
 7a0:	83 2d       	mov	r24, r3
 7a2:	80 68       	ori	r24, 0x80	; 128
 7a4:	38 2e       	mov	r3, r24
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <vfprintf+0xe2>
 7a8:	88 36       	cpi	r24, 0x68	; 104
 7aa:	41 f4       	brne	.+16     	; 0x7bc <vfprintf+0xf2>
 7ac:	f7 01       	movw	r30, r14
 7ae:	93 fd       	sbrc	r25, 3
 7b0:	85 91       	lpm	r24, Z+
 7b2:	93 ff       	sbrs	r25, 3
 7b4:	81 91       	ld	r24, Z+
 7b6:	7f 01       	movw	r14, r30
 7b8:	81 11       	cpse	r24, r1
 7ba:	b3 cf       	rjmp	.-154    	; 0x722 <vfprintf+0x58>
 7bc:	98 2f       	mov	r25, r24
 7be:	9f 7d       	andi	r25, 0xDF	; 223
 7c0:	95 54       	subi	r25, 0x45	; 69
 7c2:	93 30       	cpi	r25, 0x03	; 3
 7c4:	28 f4       	brcc	.+10     	; 0x7d0 <vfprintf+0x106>
 7c6:	0c 5f       	subi	r16, 0xFC	; 252
 7c8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ca:	9f e3       	ldi	r25, 0x3F	; 63
 7cc:	99 83       	std	Y+1, r25	; 0x01
 7ce:	0d c0       	rjmp	.+26     	; 0x7ea <vfprintf+0x120>
 7d0:	83 36       	cpi	r24, 0x63	; 99
 7d2:	31 f0       	breq	.+12     	; 0x7e0 <vfprintf+0x116>
 7d4:	83 37       	cpi	r24, 0x73	; 115
 7d6:	71 f0       	breq	.+28     	; 0x7f4 <vfprintf+0x12a>
 7d8:	83 35       	cpi	r24, 0x53	; 83
 7da:	09 f0       	breq	.+2      	; 0x7de <vfprintf+0x114>
 7dc:	55 c0       	rjmp	.+170    	; 0x888 <__DATA_REGION_LENGTH__+0x88>
 7de:	20 c0       	rjmp	.+64     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 7e0:	f8 01       	movw	r30, r16
 7e2:	80 81       	ld	r24, Z
 7e4:	89 83       	std	Y+1, r24	; 0x01
 7e6:	0e 5f       	subi	r16, 0xFE	; 254
 7e8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ea:	88 24       	eor	r8, r8
 7ec:	83 94       	inc	r8
 7ee:	91 2c       	mov	r9, r1
 7f0:	53 01       	movw	r10, r6
 7f2:	12 c0       	rjmp	.+36     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 7f4:	28 01       	movw	r4, r16
 7f6:	f2 e0       	ldi	r31, 0x02	; 2
 7f8:	4f 0e       	add	r4, r31
 7fa:	51 1c       	adc	r5, r1
 7fc:	f8 01       	movw	r30, r16
 7fe:	a0 80       	ld	r10, Z
 800:	b1 80       	ldd	r11, Z+1	; 0x01
 802:	36 fe       	sbrs	r3, 6
 804:	03 c0       	rjmp	.+6      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 806:	69 2d       	mov	r22, r9
 808:	70 e0       	ldi	r23, 0x00	; 0
 80a:	02 c0       	rjmp	.+4      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 80c:	6f ef       	ldi	r22, 0xFF	; 255
 80e:	7f ef       	ldi	r23, 0xFF	; 255
 810:	c5 01       	movw	r24, r10
 812:	38 d1       	rcall	.+624    	; 0xa84 <strnlen>
 814:	4c 01       	movw	r8, r24
 816:	82 01       	movw	r16, r4
 818:	f3 2d       	mov	r31, r3
 81a:	ff 77       	andi	r31, 0x7F	; 127
 81c:	3f 2e       	mov	r3, r31
 81e:	15 c0       	rjmp	.+42     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 820:	28 01       	movw	r4, r16
 822:	22 e0       	ldi	r18, 0x02	; 2
 824:	42 0e       	add	r4, r18
 826:	51 1c       	adc	r5, r1
 828:	f8 01       	movw	r30, r16
 82a:	a0 80       	ld	r10, Z
 82c:	b1 80       	ldd	r11, Z+1	; 0x01
 82e:	36 fe       	sbrs	r3, 6
 830:	03 c0       	rjmp	.+6      	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 832:	69 2d       	mov	r22, r9
 834:	70 e0       	ldi	r23, 0x00	; 0
 836:	02 c0       	rjmp	.+4      	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 838:	6f ef       	ldi	r22, 0xFF	; 255
 83a:	7f ef       	ldi	r23, 0xFF	; 255
 83c:	c5 01       	movw	r24, r10
 83e:	17 d1       	rcall	.+558    	; 0xa6e <strnlen_P>
 840:	4c 01       	movw	r8, r24
 842:	f3 2d       	mov	r31, r3
 844:	f0 68       	ori	r31, 0x80	; 128
 846:	3f 2e       	mov	r3, r31
 848:	82 01       	movw	r16, r4
 84a:	33 fc       	sbrc	r3, 3
 84c:	19 c0       	rjmp	.+50     	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 84e:	82 2d       	mov	r24, r2
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	88 16       	cp	r8, r24
 854:	99 06       	cpc	r9, r25
 856:	a0 f4       	brcc	.+40     	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 858:	b6 01       	movw	r22, r12
 85a:	80 e2       	ldi	r24, 0x20	; 32
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	1d d1       	rcall	.+570    	; 0xa9a <fputc>
 860:	2a 94       	dec	r2
 862:	f5 cf       	rjmp	.-22     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
 864:	f5 01       	movw	r30, r10
 866:	37 fc       	sbrc	r3, 7
 868:	85 91       	lpm	r24, Z+
 86a:	37 fe       	sbrs	r3, 7
 86c:	81 91       	ld	r24, Z+
 86e:	5f 01       	movw	r10, r30
 870:	b6 01       	movw	r22, r12
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	12 d1       	rcall	.+548    	; 0xa9a <fputc>
 876:	21 10       	cpse	r2, r1
 878:	2a 94       	dec	r2
 87a:	21 e0       	ldi	r18, 0x01	; 1
 87c:	82 1a       	sub	r8, r18
 87e:	91 08       	sbc	r9, r1
 880:	81 14       	cp	r8, r1
 882:	91 04       	cpc	r9, r1
 884:	79 f7       	brne	.-34     	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 886:	e1 c0       	rjmp	.+450    	; 0xa4a <__stack+0x14b>
 888:	84 36       	cpi	r24, 0x64	; 100
 88a:	11 f0       	breq	.+4      	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 88c:	89 36       	cpi	r24, 0x69	; 105
 88e:	39 f5       	brne	.+78     	; 0x8de <__DATA_REGION_LENGTH__+0xde>
 890:	f8 01       	movw	r30, r16
 892:	37 fe       	sbrs	r3, 7
 894:	07 c0       	rjmp	.+14     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
 896:	60 81       	ld	r22, Z
 898:	71 81       	ldd	r23, Z+1	; 0x01
 89a:	82 81       	ldd	r24, Z+2	; 0x02
 89c:	93 81       	ldd	r25, Z+3	; 0x03
 89e:	0c 5f       	subi	r16, 0xFC	; 252
 8a0:	1f 4f       	sbci	r17, 0xFF	; 255
 8a2:	08 c0       	rjmp	.+16     	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
 8a4:	60 81       	ld	r22, Z
 8a6:	71 81       	ldd	r23, Z+1	; 0x01
 8a8:	07 2e       	mov	r0, r23
 8aa:	00 0c       	add	r0, r0
 8ac:	88 0b       	sbc	r24, r24
 8ae:	99 0b       	sbc	r25, r25
 8b0:	0e 5f       	subi	r16, 0xFE	; 254
 8b2:	1f 4f       	sbci	r17, 0xFF	; 255
 8b4:	f3 2d       	mov	r31, r3
 8b6:	ff 76       	andi	r31, 0x6F	; 111
 8b8:	3f 2e       	mov	r3, r31
 8ba:	97 ff       	sbrs	r25, 7
 8bc:	09 c0       	rjmp	.+18     	; 0x8d0 <__DATA_REGION_LENGTH__+0xd0>
 8be:	90 95       	com	r25
 8c0:	80 95       	com	r24
 8c2:	70 95       	com	r23
 8c4:	61 95       	neg	r22
 8c6:	7f 4f       	sbci	r23, 0xFF	; 255
 8c8:	8f 4f       	sbci	r24, 0xFF	; 255
 8ca:	9f 4f       	sbci	r25, 0xFF	; 255
 8cc:	f0 68       	ori	r31, 0x80	; 128
 8ce:	3f 2e       	mov	r3, r31
 8d0:	2a e0       	ldi	r18, 0x0A	; 10
 8d2:	30 e0       	ldi	r19, 0x00	; 0
 8d4:	a3 01       	movw	r20, r6
 8d6:	1d d1       	rcall	.+570    	; 0xb12 <__ultoa_invert>
 8d8:	88 2e       	mov	r8, r24
 8da:	86 18       	sub	r8, r6
 8dc:	44 c0       	rjmp	.+136    	; 0x966 <__stack+0x67>
 8de:	85 37       	cpi	r24, 0x75	; 117
 8e0:	31 f4       	brne	.+12     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8e2:	23 2d       	mov	r18, r3
 8e4:	2f 7e       	andi	r18, 0xEF	; 239
 8e6:	b2 2e       	mov	r11, r18
 8e8:	2a e0       	ldi	r18, 0x0A	; 10
 8ea:	30 e0       	ldi	r19, 0x00	; 0
 8ec:	25 c0       	rjmp	.+74     	; 0x938 <__stack+0x39>
 8ee:	93 2d       	mov	r25, r3
 8f0:	99 7f       	andi	r25, 0xF9	; 249
 8f2:	b9 2e       	mov	r11, r25
 8f4:	8f 36       	cpi	r24, 0x6F	; 111
 8f6:	c1 f0       	breq	.+48     	; 0x928 <__stack+0x29>
 8f8:	18 f4       	brcc	.+6      	; 0x900 <__stack+0x1>
 8fa:	88 35       	cpi	r24, 0x58	; 88
 8fc:	79 f0       	breq	.+30     	; 0x91c <__stack+0x1d>
 8fe:	ae c0       	rjmp	.+348    	; 0xa5c <__stack+0x15d>
 900:	80 37       	cpi	r24, 0x70	; 112
 902:	19 f0       	breq	.+6      	; 0x90a <__stack+0xb>
 904:	88 37       	cpi	r24, 0x78	; 120
 906:	21 f0       	breq	.+8      	; 0x910 <__stack+0x11>
 908:	a9 c0       	rjmp	.+338    	; 0xa5c <__stack+0x15d>
 90a:	e9 2f       	mov	r30, r25
 90c:	e0 61       	ori	r30, 0x10	; 16
 90e:	be 2e       	mov	r11, r30
 910:	b4 fe       	sbrs	r11, 4
 912:	0d c0       	rjmp	.+26     	; 0x92e <__stack+0x2f>
 914:	fb 2d       	mov	r31, r11
 916:	f4 60       	ori	r31, 0x04	; 4
 918:	bf 2e       	mov	r11, r31
 91a:	09 c0       	rjmp	.+18     	; 0x92e <__stack+0x2f>
 91c:	34 fe       	sbrs	r3, 4
 91e:	0a c0       	rjmp	.+20     	; 0x934 <__stack+0x35>
 920:	29 2f       	mov	r18, r25
 922:	26 60       	ori	r18, 0x06	; 6
 924:	b2 2e       	mov	r11, r18
 926:	06 c0       	rjmp	.+12     	; 0x934 <__stack+0x35>
 928:	28 e0       	ldi	r18, 0x08	; 8
 92a:	30 e0       	ldi	r19, 0x00	; 0
 92c:	05 c0       	rjmp	.+10     	; 0x938 <__stack+0x39>
 92e:	20 e1       	ldi	r18, 0x10	; 16
 930:	30 e0       	ldi	r19, 0x00	; 0
 932:	02 c0       	rjmp	.+4      	; 0x938 <__stack+0x39>
 934:	20 e1       	ldi	r18, 0x10	; 16
 936:	32 e0       	ldi	r19, 0x02	; 2
 938:	f8 01       	movw	r30, r16
 93a:	b7 fe       	sbrs	r11, 7
 93c:	07 c0       	rjmp	.+14     	; 0x94c <__stack+0x4d>
 93e:	60 81       	ld	r22, Z
 940:	71 81       	ldd	r23, Z+1	; 0x01
 942:	82 81       	ldd	r24, Z+2	; 0x02
 944:	93 81       	ldd	r25, Z+3	; 0x03
 946:	0c 5f       	subi	r16, 0xFC	; 252
 948:	1f 4f       	sbci	r17, 0xFF	; 255
 94a:	06 c0       	rjmp	.+12     	; 0x958 <__stack+0x59>
 94c:	60 81       	ld	r22, Z
 94e:	71 81       	ldd	r23, Z+1	; 0x01
 950:	80 e0       	ldi	r24, 0x00	; 0
 952:	90 e0       	ldi	r25, 0x00	; 0
 954:	0e 5f       	subi	r16, 0xFE	; 254
 956:	1f 4f       	sbci	r17, 0xFF	; 255
 958:	a3 01       	movw	r20, r6
 95a:	db d0       	rcall	.+438    	; 0xb12 <__ultoa_invert>
 95c:	88 2e       	mov	r8, r24
 95e:	86 18       	sub	r8, r6
 960:	fb 2d       	mov	r31, r11
 962:	ff 77       	andi	r31, 0x7F	; 127
 964:	3f 2e       	mov	r3, r31
 966:	36 fe       	sbrs	r3, 6
 968:	0d c0       	rjmp	.+26     	; 0x984 <__stack+0x85>
 96a:	23 2d       	mov	r18, r3
 96c:	2e 7f       	andi	r18, 0xFE	; 254
 96e:	a2 2e       	mov	r10, r18
 970:	89 14       	cp	r8, r9
 972:	58 f4       	brcc	.+22     	; 0x98a <__stack+0x8b>
 974:	34 fe       	sbrs	r3, 4
 976:	0b c0       	rjmp	.+22     	; 0x98e <__stack+0x8f>
 978:	32 fc       	sbrc	r3, 2
 97a:	09 c0       	rjmp	.+18     	; 0x98e <__stack+0x8f>
 97c:	83 2d       	mov	r24, r3
 97e:	8e 7e       	andi	r24, 0xEE	; 238
 980:	a8 2e       	mov	r10, r24
 982:	05 c0       	rjmp	.+10     	; 0x98e <__stack+0x8f>
 984:	b8 2c       	mov	r11, r8
 986:	a3 2c       	mov	r10, r3
 988:	03 c0       	rjmp	.+6      	; 0x990 <__stack+0x91>
 98a:	b8 2c       	mov	r11, r8
 98c:	01 c0       	rjmp	.+2      	; 0x990 <__stack+0x91>
 98e:	b9 2c       	mov	r11, r9
 990:	a4 fe       	sbrs	r10, 4
 992:	0f c0       	rjmp	.+30     	; 0x9b2 <__stack+0xb3>
 994:	fe 01       	movw	r30, r28
 996:	e8 0d       	add	r30, r8
 998:	f1 1d       	adc	r31, r1
 99a:	80 81       	ld	r24, Z
 99c:	80 33       	cpi	r24, 0x30	; 48
 99e:	21 f4       	brne	.+8      	; 0x9a8 <__stack+0xa9>
 9a0:	9a 2d       	mov	r25, r10
 9a2:	99 7e       	andi	r25, 0xE9	; 233
 9a4:	a9 2e       	mov	r10, r25
 9a6:	09 c0       	rjmp	.+18     	; 0x9ba <__stack+0xbb>
 9a8:	a2 fe       	sbrs	r10, 2
 9aa:	06 c0       	rjmp	.+12     	; 0x9b8 <__stack+0xb9>
 9ac:	b3 94       	inc	r11
 9ae:	b3 94       	inc	r11
 9b0:	04 c0       	rjmp	.+8      	; 0x9ba <__stack+0xbb>
 9b2:	8a 2d       	mov	r24, r10
 9b4:	86 78       	andi	r24, 0x86	; 134
 9b6:	09 f0       	breq	.+2      	; 0x9ba <__stack+0xbb>
 9b8:	b3 94       	inc	r11
 9ba:	a3 fc       	sbrc	r10, 3
 9bc:	10 c0       	rjmp	.+32     	; 0x9de <__stack+0xdf>
 9be:	a0 fe       	sbrs	r10, 0
 9c0:	06 c0       	rjmp	.+12     	; 0x9ce <__stack+0xcf>
 9c2:	b2 14       	cp	r11, r2
 9c4:	80 f4       	brcc	.+32     	; 0x9e6 <__stack+0xe7>
 9c6:	28 0c       	add	r2, r8
 9c8:	92 2c       	mov	r9, r2
 9ca:	9b 18       	sub	r9, r11
 9cc:	0d c0       	rjmp	.+26     	; 0x9e8 <__stack+0xe9>
 9ce:	b2 14       	cp	r11, r2
 9d0:	58 f4       	brcc	.+22     	; 0x9e8 <__stack+0xe9>
 9d2:	b6 01       	movw	r22, r12
 9d4:	80 e2       	ldi	r24, 0x20	; 32
 9d6:	90 e0       	ldi	r25, 0x00	; 0
 9d8:	60 d0       	rcall	.+192    	; 0xa9a <fputc>
 9da:	b3 94       	inc	r11
 9dc:	f8 cf       	rjmp	.-16     	; 0x9ce <__stack+0xcf>
 9de:	b2 14       	cp	r11, r2
 9e0:	18 f4       	brcc	.+6      	; 0x9e8 <__stack+0xe9>
 9e2:	2b 18       	sub	r2, r11
 9e4:	02 c0       	rjmp	.+4      	; 0x9ea <__stack+0xeb>
 9e6:	98 2c       	mov	r9, r8
 9e8:	21 2c       	mov	r2, r1
 9ea:	a4 fe       	sbrs	r10, 4
 9ec:	0f c0       	rjmp	.+30     	; 0xa0c <__stack+0x10d>
 9ee:	b6 01       	movw	r22, r12
 9f0:	80 e3       	ldi	r24, 0x30	; 48
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	52 d0       	rcall	.+164    	; 0xa9a <fputc>
 9f6:	a2 fe       	sbrs	r10, 2
 9f8:	16 c0       	rjmp	.+44     	; 0xa26 <__stack+0x127>
 9fa:	a1 fc       	sbrc	r10, 1
 9fc:	03 c0       	rjmp	.+6      	; 0xa04 <__stack+0x105>
 9fe:	88 e7       	ldi	r24, 0x78	; 120
 a00:	90 e0       	ldi	r25, 0x00	; 0
 a02:	02 c0       	rjmp	.+4      	; 0xa08 <__stack+0x109>
 a04:	88 e5       	ldi	r24, 0x58	; 88
 a06:	90 e0       	ldi	r25, 0x00	; 0
 a08:	b6 01       	movw	r22, r12
 a0a:	0c c0       	rjmp	.+24     	; 0xa24 <__stack+0x125>
 a0c:	8a 2d       	mov	r24, r10
 a0e:	86 78       	andi	r24, 0x86	; 134
 a10:	51 f0       	breq	.+20     	; 0xa26 <__stack+0x127>
 a12:	a1 fe       	sbrs	r10, 1
 a14:	02 c0       	rjmp	.+4      	; 0xa1a <__stack+0x11b>
 a16:	8b e2       	ldi	r24, 0x2B	; 43
 a18:	01 c0       	rjmp	.+2      	; 0xa1c <__stack+0x11d>
 a1a:	80 e2       	ldi	r24, 0x20	; 32
 a1c:	a7 fc       	sbrc	r10, 7
 a1e:	8d e2       	ldi	r24, 0x2D	; 45
 a20:	b6 01       	movw	r22, r12
 a22:	90 e0       	ldi	r25, 0x00	; 0
 a24:	3a d0       	rcall	.+116    	; 0xa9a <fputc>
 a26:	89 14       	cp	r8, r9
 a28:	30 f4       	brcc	.+12     	; 0xa36 <__stack+0x137>
 a2a:	b6 01       	movw	r22, r12
 a2c:	80 e3       	ldi	r24, 0x30	; 48
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	34 d0       	rcall	.+104    	; 0xa9a <fputc>
 a32:	9a 94       	dec	r9
 a34:	f8 cf       	rjmp	.-16     	; 0xa26 <__stack+0x127>
 a36:	8a 94       	dec	r8
 a38:	f3 01       	movw	r30, r6
 a3a:	e8 0d       	add	r30, r8
 a3c:	f1 1d       	adc	r31, r1
 a3e:	80 81       	ld	r24, Z
 a40:	b6 01       	movw	r22, r12
 a42:	90 e0       	ldi	r25, 0x00	; 0
 a44:	2a d0       	rcall	.+84     	; 0xa9a <fputc>
 a46:	81 10       	cpse	r8, r1
 a48:	f6 cf       	rjmp	.-20     	; 0xa36 <__stack+0x137>
 a4a:	22 20       	and	r2, r2
 a4c:	09 f4       	brne	.+2      	; 0xa50 <__stack+0x151>
 a4e:	4e ce       	rjmp	.-868    	; 0x6ec <vfprintf+0x22>
 a50:	b6 01       	movw	r22, r12
 a52:	80 e2       	ldi	r24, 0x20	; 32
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	21 d0       	rcall	.+66     	; 0xa9a <fputc>
 a58:	2a 94       	dec	r2
 a5a:	f7 cf       	rjmp	.-18     	; 0xa4a <__stack+0x14b>
 a5c:	f6 01       	movw	r30, r12
 a5e:	86 81       	ldd	r24, Z+6	; 0x06
 a60:	97 81       	ldd	r25, Z+7	; 0x07
 a62:	02 c0       	rjmp	.+4      	; 0xa68 <__stack+0x169>
 a64:	8f ef       	ldi	r24, 0xFF	; 255
 a66:	9f ef       	ldi	r25, 0xFF	; 255
 a68:	2b 96       	adiw	r28, 0x0b	; 11
 a6a:	e2 e1       	ldi	r30, 0x12	; 18
 a6c:	cc c0       	rjmp	.+408    	; 0xc06 <__epilogue_restores__>

00000a6e <strnlen_P>:
 a6e:	fc 01       	movw	r30, r24
 a70:	05 90       	lpm	r0, Z+
 a72:	61 50       	subi	r22, 0x01	; 1
 a74:	70 40       	sbci	r23, 0x00	; 0
 a76:	01 10       	cpse	r0, r1
 a78:	d8 f7       	brcc	.-10     	; 0xa70 <strnlen_P+0x2>
 a7a:	80 95       	com	r24
 a7c:	90 95       	com	r25
 a7e:	8e 0f       	add	r24, r30
 a80:	9f 1f       	adc	r25, r31
 a82:	08 95       	ret

00000a84 <strnlen>:
 a84:	fc 01       	movw	r30, r24
 a86:	61 50       	subi	r22, 0x01	; 1
 a88:	70 40       	sbci	r23, 0x00	; 0
 a8a:	01 90       	ld	r0, Z+
 a8c:	01 10       	cpse	r0, r1
 a8e:	d8 f7       	brcc	.-10     	; 0xa86 <strnlen+0x2>
 a90:	80 95       	com	r24
 a92:	90 95       	com	r25
 a94:	8e 0f       	add	r24, r30
 a96:	9f 1f       	adc	r25, r31
 a98:	08 95       	ret

00000a9a <fputc>:
 a9a:	0f 93       	push	r16
 a9c:	1f 93       	push	r17
 a9e:	cf 93       	push	r28
 aa0:	df 93       	push	r29
 aa2:	fb 01       	movw	r30, r22
 aa4:	23 81       	ldd	r18, Z+3	; 0x03
 aa6:	21 fd       	sbrc	r18, 1
 aa8:	03 c0       	rjmp	.+6      	; 0xab0 <fputc+0x16>
 aaa:	8f ef       	ldi	r24, 0xFF	; 255
 aac:	9f ef       	ldi	r25, 0xFF	; 255
 aae:	2c c0       	rjmp	.+88     	; 0xb08 <fputc+0x6e>
 ab0:	22 ff       	sbrs	r18, 2
 ab2:	16 c0       	rjmp	.+44     	; 0xae0 <fputc+0x46>
 ab4:	46 81       	ldd	r20, Z+6	; 0x06
 ab6:	57 81       	ldd	r21, Z+7	; 0x07
 ab8:	24 81       	ldd	r18, Z+4	; 0x04
 aba:	35 81       	ldd	r19, Z+5	; 0x05
 abc:	42 17       	cp	r20, r18
 abe:	53 07       	cpc	r21, r19
 ac0:	44 f4       	brge	.+16     	; 0xad2 <fputc+0x38>
 ac2:	a0 81       	ld	r26, Z
 ac4:	b1 81       	ldd	r27, Z+1	; 0x01
 ac6:	9d 01       	movw	r18, r26
 ac8:	2f 5f       	subi	r18, 0xFF	; 255
 aca:	3f 4f       	sbci	r19, 0xFF	; 255
 acc:	31 83       	std	Z+1, r19	; 0x01
 ace:	20 83       	st	Z, r18
 ad0:	8c 93       	st	X, r24
 ad2:	26 81       	ldd	r18, Z+6	; 0x06
 ad4:	37 81       	ldd	r19, Z+7	; 0x07
 ad6:	2f 5f       	subi	r18, 0xFF	; 255
 ad8:	3f 4f       	sbci	r19, 0xFF	; 255
 ada:	37 83       	std	Z+7, r19	; 0x07
 adc:	26 83       	std	Z+6, r18	; 0x06
 ade:	14 c0       	rjmp	.+40     	; 0xb08 <fputc+0x6e>
 ae0:	8b 01       	movw	r16, r22
 ae2:	ec 01       	movw	r28, r24
 ae4:	fb 01       	movw	r30, r22
 ae6:	00 84       	ldd	r0, Z+8	; 0x08
 ae8:	f1 85       	ldd	r31, Z+9	; 0x09
 aea:	e0 2d       	mov	r30, r0
 aec:	09 95       	icall
 aee:	89 2b       	or	r24, r25
 af0:	e1 f6       	brne	.-72     	; 0xaaa <fputc+0x10>
 af2:	d8 01       	movw	r26, r16
 af4:	16 96       	adiw	r26, 0x06	; 6
 af6:	8d 91       	ld	r24, X+
 af8:	9c 91       	ld	r25, X
 afa:	17 97       	sbiw	r26, 0x07	; 7
 afc:	01 96       	adiw	r24, 0x01	; 1
 afe:	17 96       	adiw	r26, 0x07	; 7
 b00:	9c 93       	st	X, r25
 b02:	8e 93       	st	-X, r24
 b04:	16 97       	sbiw	r26, 0x06	; 6
 b06:	ce 01       	movw	r24, r28
 b08:	df 91       	pop	r29
 b0a:	cf 91       	pop	r28
 b0c:	1f 91       	pop	r17
 b0e:	0f 91       	pop	r16
 b10:	08 95       	ret

00000b12 <__ultoa_invert>:
 b12:	fa 01       	movw	r30, r20
 b14:	aa 27       	eor	r26, r26
 b16:	28 30       	cpi	r18, 0x08	; 8
 b18:	51 f1       	breq	.+84     	; 0xb6e <__ultoa_invert+0x5c>
 b1a:	20 31       	cpi	r18, 0x10	; 16
 b1c:	81 f1       	breq	.+96     	; 0xb7e <__ultoa_invert+0x6c>
 b1e:	e8 94       	clt
 b20:	6f 93       	push	r22
 b22:	6e 7f       	andi	r22, 0xFE	; 254
 b24:	6e 5f       	subi	r22, 0xFE	; 254
 b26:	7f 4f       	sbci	r23, 0xFF	; 255
 b28:	8f 4f       	sbci	r24, 0xFF	; 255
 b2a:	9f 4f       	sbci	r25, 0xFF	; 255
 b2c:	af 4f       	sbci	r26, 0xFF	; 255
 b2e:	b1 e0       	ldi	r27, 0x01	; 1
 b30:	3e d0       	rcall	.+124    	; 0xbae <__ultoa_invert+0x9c>
 b32:	b4 e0       	ldi	r27, 0x04	; 4
 b34:	3c d0       	rcall	.+120    	; 0xbae <__ultoa_invert+0x9c>
 b36:	67 0f       	add	r22, r23
 b38:	78 1f       	adc	r23, r24
 b3a:	89 1f       	adc	r24, r25
 b3c:	9a 1f       	adc	r25, r26
 b3e:	a1 1d       	adc	r26, r1
 b40:	68 0f       	add	r22, r24
 b42:	79 1f       	adc	r23, r25
 b44:	8a 1f       	adc	r24, r26
 b46:	91 1d       	adc	r25, r1
 b48:	a1 1d       	adc	r26, r1
 b4a:	6a 0f       	add	r22, r26
 b4c:	71 1d       	adc	r23, r1
 b4e:	81 1d       	adc	r24, r1
 b50:	91 1d       	adc	r25, r1
 b52:	a1 1d       	adc	r26, r1
 b54:	20 d0       	rcall	.+64     	; 0xb96 <__ultoa_invert+0x84>
 b56:	09 f4       	brne	.+2      	; 0xb5a <__ultoa_invert+0x48>
 b58:	68 94       	set
 b5a:	3f 91       	pop	r19
 b5c:	2a e0       	ldi	r18, 0x0A	; 10
 b5e:	26 9f       	mul	r18, r22
 b60:	11 24       	eor	r1, r1
 b62:	30 19       	sub	r19, r0
 b64:	30 5d       	subi	r19, 0xD0	; 208
 b66:	31 93       	st	Z+, r19
 b68:	de f6       	brtc	.-74     	; 0xb20 <__ultoa_invert+0xe>
 b6a:	cf 01       	movw	r24, r30
 b6c:	08 95       	ret
 b6e:	46 2f       	mov	r20, r22
 b70:	47 70       	andi	r20, 0x07	; 7
 b72:	40 5d       	subi	r20, 0xD0	; 208
 b74:	41 93       	st	Z+, r20
 b76:	b3 e0       	ldi	r27, 0x03	; 3
 b78:	0f d0       	rcall	.+30     	; 0xb98 <__ultoa_invert+0x86>
 b7a:	c9 f7       	brne	.-14     	; 0xb6e <__ultoa_invert+0x5c>
 b7c:	f6 cf       	rjmp	.-20     	; 0xb6a <__ultoa_invert+0x58>
 b7e:	46 2f       	mov	r20, r22
 b80:	4f 70       	andi	r20, 0x0F	; 15
 b82:	40 5d       	subi	r20, 0xD0	; 208
 b84:	4a 33       	cpi	r20, 0x3A	; 58
 b86:	18 f0       	brcs	.+6      	; 0xb8e <__ultoa_invert+0x7c>
 b88:	49 5d       	subi	r20, 0xD9	; 217
 b8a:	31 fd       	sbrc	r19, 1
 b8c:	40 52       	subi	r20, 0x20	; 32
 b8e:	41 93       	st	Z+, r20
 b90:	02 d0       	rcall	.+4      	; 0xb96 <__ultoa_invert+0x84>
 b92:	a9 f7       	brne	.-22     	; 0xb7e <__ultoa_invert+0x6c>
 b94:	ea cf       	rjmp	.-44     	; 0xb6a <__ultoa_invert+0x58>
 b96:	b4 e0       	ldi	r27, 0x04	; 4
 b98:	a6 95       	lsr	r26
 b9a:	97 95       	ror	r25
 b9c:	87 95       	ror	r24
 b9e:	77 95       	ror	r23
 ba0:	67 95       	ror	r22
 ba2:	ba 95       	dec	r27
 ba4:	c9 f7       	brne	.-14     	; 0xb98 <__ultoa_invert+0x86>
 ba6:	00 97       	sbiw	r24, 0x00	; 0
 ba8:	61 05       	cpc	r22, r1
 baa:	71 05       	cpc	r23, r1
 bac:	08 95       	ret
 bae:	9b 01       	movw	r18, r22
 bb0:	ac 01       	movw	r20, r24
 bb2:	0a 2e       	mov	r0, r26
 bb4:	06 94       	lsr	r0
 bb6:	57 95       	ror	r21
 bb8:	47 95       	ror	r20
 bba:	37 95       	ror	r19
 bbc:	27 95       	ror	r18
 bbe:	ba 95       	dec	r27
 bc0:	c9 f7       	brne	.-14     	; 0xbb4 <__ultoa_invert+0xa2>
 bc2:	62 0f       	add	r22, r18
 bc4:	73 1f       	adc	r23, r19
 bc6:	84 1f       	adc	r24, r20
 bc8:	95 1f       	adc	r25, r21
 bca:	a0 1d       	adc	r26, r0
 bcc:	08 95       	ret

00000bce <__prologue_saves__>:
 bce:	2f 92       	push	r2
 bd0:	3f 92       	push	r3
 bd2:	4f 92       	push	r4
 bd4:	5f 92       	push	r5
 bd6:	6f 92       	push	r6
 bd8:	7f 92       	push	r7
 bda:	8f 92       	push	r8
 bdc:	9f 92       	push	r9
 bde:	af 92       	push	r10
 be0:	bf 92       	push	r11
 be2:	cf 92       	push	r12
 be4:	df 92       	push	r13
 be6:	ef 92       	push	r14
 be8:	ff 92       	push	r15
 bea:	0f 93       	push	r16
 bec:	1f 93       	push	r17
 bee:	cf 93       	push	r28
 bf0:	df 93       	push	r29
 bf2:	cd b7       	in	r28, 0x3d	; 61
 bf4:	de b7       	in	r29, 0x3e	; 62
 bf6:	ca 1b       	sub	r28, r26
 bf8:	db 0b       	sbc	r29, r27
 bfa:	0f b6       	in	r0, 0x3f	; 63
 bfc:	f8 94       	cli
 bfe:	de bf       	out	0x3e, r29	; 62
 c00:	0f be       	out	0x3f, r0	; 63
 c02:	cd bf       	out	0x3d, r28	; 61
 c04:	09 94       	ijmp

00000c06 <__epilogue_restores__>:
 c06:	2a 88       	ldd	r2, Y+18	; 0x12
 c08:	39 88       	ldd	r3, Y+17	; 0x11
 c0a:	48 88       	ldd	r4, Y+16	; 0x10
 c0c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c0e:	6e 84       	ldd	r6, Y+14	; 0x0e
 c10:	7d 84       	ldd	r7, Y+13	; 0x0d
 c12:	8c 84       	ldd	r8, Y+12	; 0x0c
 c14:	9b 84       	ldd	r9, Y+11	; 0x0b
 c16:	aa 84       	ldd	r10, Y+10	; 0x0a
 c18:	b9 84       	ldd	r11, Y+9	; 0x09
 c1a:	c8 84       	ldd	r12, Y+8	; 0x08
 c1c:	df 80       	ldd	r13, Y+7	; 0x07
 c1e:	ee 80       	ldd	r14, Y+6	; 0x06
 c20:	fd 80       	ldd	r15, Y+5	; 0x05
 c22:	0c 81       	ldd	r16, Y+4	; 0x04
 c24:	1b 81       	ldd	r17, Y+3	; 0x03
 c26:	aa 81       	ldd	r26, Y+2	; 0x02
 c28:	b9 81       	ldd	r27, Y+1	; 0x01
 c2a:	ce 0f       	add	r28, r30
 c2c:	d1 1d       	adc	r29, r1
 c2e:	0f b6       	in	r0, 0x3f	; 63
 c30:	f8 94       	cli
 c32:	de bf       	out	0x3e, r29	; 62
 c34:	0f be       	out	0x3f, r0	; 63
 c36:	cd bf       	out	0x3d, r28	; 61
 c38:	ed 01       	movw	r28, r26
 c3a:	08 95       	ret

00000c3c <_exit>:
 c3c:	f8 94       	cli

00000c3e <__stop_program>:
 c3e:	ff cf       	rjmp	.-2      	; 0xc3e <__stop_program>
